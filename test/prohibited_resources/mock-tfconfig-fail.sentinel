import "strings"

providers = {
	"vault": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/vault",
		"module_address":      "",
		"name":                "vault",
		"provider_config_key": "vault",
		"version_constraint":  "~> 3.10.0",
	},
}

resources = {
	"vault_generic_secret.children": {
		"address": "vault_generic_secret.children",
		"config": {
			"data_json": {
				"references": [
					"each.key",
				],
			},
			"namespace": {
				"references": [
					"vault_mount.children",
					"each.key",
				],
			},
			"path": {
				"references": [
					"vault_mount.children",
					"each.key",
				],
			},
		},
		"count":      {},
		"depends_on": [],
		"for_each": {
			"references": [
				"local.child_namespaces",
			],
		},
		"mode":                "managed",
		"module_address":      "",
		"name":                "children",
		"provider_config_key": "vault",
		"provisioners":        [],
		"type":                "vault_generic_secret",
	},
	"vault_mount.children": {
		"address": "vault_mount.children",
		"config": {
			"namespace": {
				"references": [
					"vault_namespace.children",
					"each.key",
				],
			},
			"options": {
				"constant_value": {
					"version": "1",
				},
			},
			"path": {
				"constant_value": "secrets",
			},
			"type": {
				"constant_value": "kv",
			},
		},
		"count":      {},
		"depends_on": [],
		"for_each": {
			"references": [
				"local.child_namespaces",
			],
		},
		"mode":                "managed",
		"module_address":      "",
		"name":                "children",
		"provider_config_key": "vault",
		"provisioners":        [],
		"type":                "vault_mount",
	},
	"vault_namespace.children": {
		"address": "vault_namespace.children",
		"config": {
			"namespace": {
				"references": [
					"vault_namespace.parent.path",
					"vault_namespace.parent",
				],
			},
			"path": {
				"references": [
					"each.key",
				],
			},
		},
		"count":      {},
		"depends_on": [],
		"for_each": {
			"references": [
				"local.child_namespaces",
			],
		},
		"mode":                "managed",
		"module_address":      "",
		"name":                "children",
		"provider_config_key": "vault",
		"provisioners":        [],
		"type":                "vault_namespace",
	},
	"vault_namespace.parent": {
		"address": "vault_namespace.parent",
		"config": {
			"path": {
				"constant_value": "parent",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "parent",
		"provider_config_key": "vault",
		"provisioners":        [],
		"type":                "vault_namespace",
	},
}

provisioners = {}

variables = {
	"child_namespaces": {
		"default": [
			"child_0",
			"child_1",
			"child_2",
		],
		"description":    "",
		"module_address": "",
		"name":           "child_namespaces",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
